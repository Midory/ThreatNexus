// src/components/VulnerabilityDetailsPage.js
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axios from 'axios';
import { Container, Typography, Button, Box, Paper } from '@mui/material';
import ReactMarkdown from 'react-markdown';

function VulnerabilityDetailsPage() {
  const { cveId } = useParams();
  const [vulnerability, setVulnerability] = useState(null);
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();
  const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8080';

  useEffect(() => {
    axios
      .get(`${baseURL}/api/vulnerabilities/${cveId}`)
      .then((response) => {
        setVulnerability(response.data);
        setLoading(false);
      })
      .catch((error) => {
        console.error('Error fetching vulnerability details:', error);
        setLoading(false);
      });
  }, [cveId, baseURL]);

  return (
    <Container sx={{ mt: 4 }}>
      <Button variant="contained" onClick={() => navigate(-1)} sx={{ mb: 2 }}>
        Back
      </Button>
      {loading ? (
        <Typography>Loading...</Typography>
      ) : vulnerability ? (
        <Box>
          <Typography variant="h4" gutterBottom>
            {vulnerability.cveId}
          </Typography>
          <Paper sx={{ p: 2, mb: 2, backgroundColor: '#1c1c1c' }}>
            <Typography variant="h6">Basic Details</Typography>
            <pre style={{ color: '#00e5ff', overflowX: 'auto' }}>
              {JSON.stringify(vulnerability, null, 2)}
            </pre>
          </Paper>
          {vulnerability.enrichedDetails && (
            <Paper sx={{ p: 2, backgroundColor: '#1c1c1c' }}>
              <Typography variant="h6" sx={{ mb: 1 }}>
                Enriched Details
              </Typography>
              <Box>
                <ReactMarkdown>
                  {vulnerability.enrichedDetails}
                </ReactMarkdown>
              </Box>
            </Paper>
          )}
        </Box>
      ) : (
        <Typography variant="h6">Vulnerability not found</Typography>
      )}
    </Container>
  );
}

export default VulnerabilityDetailsPage;
